<?php

namespace App\Controller;

use App\Entity\Contactusmessage;
use App\Entity\Galery;
use App\Form\GaleryType;
use App\Repository\GaleryRepository;
use Symfony\Bundle\FrameworkBundle\Controller\AbstractController;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\HttpFoundation\Response;
use Symfony\Component\Routing\Annotation\Route;

/**
 * @Route("/admin/galery")
 */
class GaleryController extends AbstractController
{
    /**
     * @Route("/", name="galery_index", methods={"GET","POST"})
     */
    public function index(GaleryRepository $galeryRepository,Request $request): Response
    {
        if ($request->isMethod('post')) {
            $x=$request->get('galeri');
            return $this->render('galery/index.html.twig', ['galeries' => $galeryRepository->findAll(),"galerino" => $x,
                'countmessage' => $this->getcountmessages()
                ]);
        }
        return $this->render('galery/index.html.twig', ['galeries' => $galeryRepository->findAll(),"galerino" => 1,
            'countmessage' => $this->getcountmessages()
        ]);
    }

    /**
     * @Route("/new", name="galery_new", methods={"GET","POST"})
     */
    public function new(Request $request): Response
    {
        $galery = new Galery();
        $form = $this->createForm(GaleryType::class, $galery);
        $form->handleRequest($request);
        $file=$request->files->get('imagename');

        if ($request->isMethod('post') && $file!=null ) {
            $fileName = $this->generateUniqueFileName().'.'.$file->guessExtension();
            try {
                $file->move(
                    $this->getParameter('images_directory'),
                    $fileName
                );
            } catch (FileException $e) {
                // ... handle exception if something happens during file upload
            }
            $entityManager = $this->getDoctrine()->getManager();
            $galery->setName($fileName);
            $entityManager->persist($galery);
            $entityManager->flush();

            return $this->redirectToRoute('galery_index',['countmessage' => $this->getcountmessages()]);
        }

        return $this->render('galery/new.html.twig', [
            'galery' => $galery,
            'form' => $form->createView(),
            'countmessage' => $this->getcountmessages()
        ]);
    }

    /**
     * @Route("/{id}", name="galery_show", methods={"GET"})
     */
    public function show(Galery $galery): Response
    {
        return $this->render('galery/show.html.twig', ['galery' => $galery,'countmessage' => $this->getcountmessages()]);
    }

    /**
     * @Route("/{id}/edit", name="galery_edit", methods={"GET","POST"})
     */
    public function edit(Request $request, Galery $galery): Response
    {
        $form = $this->createForm(GaleryType::class, $galery);
        $form->handleRequest($request);
        $file=$request->files->get('imagename');
        if ($request->isMethod('post')  ) {
            $this->getDoctrine()->getManager()->flush();
            if($file!=null){
            try {
                $file->move(
                    $this->getParameter('images_directory'),
                    $galery->getName()
                );
            } catch (FileException $e) {
                // ... handle exception if something happens during file upload
            }
            }
            return $this->redirectToRoute('galery_index',['countmessage' => $this->getcountmessages()]);
        }

        return $this->render('galery/edit.html.twig', [
            'galery' => $galery,
            'form' => $form->createView(),
            'countmessage' => $this->getcountmessages()
        ]);
    }

    /**
     * @Route("/{id}", name="galery_delete", methods={"DELETE"})
     */
    public function delete(Request $request, Galery $galery): Response
    {
        if ($this->isCsrfTokenValid('delete'.$galery->getId(), $request->request->get('_token'))) {
            $entityManager = $this->getDoctrine()->getManager();
            $entityManager->remove($galery);
            $entityManager->flush();
        }

        return $this->redirectToRoute('galery_index',['countmessage' => $this->getcountmessages()]);
    }
    private function generateUniqueFileName()
    {
        // md5() reduces the similarity of the file names generated by
        // uniqid(), which is based on timestamps
        return md5(uniqid());
    }
    public function getcountmessages(): int
    {
        $em = $this->getDoctrine()->getManager();
        $messages=$em->getRepository(Contactusmessage::class)->findBy(array('status'=>0));

        return sizeof($messages);
    }
}
